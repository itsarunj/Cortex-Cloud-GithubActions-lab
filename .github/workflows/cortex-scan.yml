name: Cortex Cloud Code Scan & Azure Deployment

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  # The manual 'workflow_dispatch' trigger and its inputs have been removed.
  # The workflow will now be fully automated by push and pull_request events.

jobs:
  code-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v4
      
      - name: Download cortexcli
        id: download-cli
        run: |
          response=$(curl --location 'https://api-tac-x5.xdr.sg.paloaltonetworks.com/public_api/v1/unified-cli/releases/download-link?os=linux&architecture=amd64' \
            --header 'Authorization: ${{ secrets.CORTEX_API_KEY }}' \
            --header 'x-xdr-auth-id: ${{ secrets.CORTEX_API_KEY_ID }}' \
            --silent)
          
          downloadUrl=$(echo "${response}" | jq -r '.signed_url')
          
          curl -o cortexcli "${downloadUrl}"
          chmod +x cortexcli
          ./cortexcli --version
          
      - name: Run Scan
        run: |
          # The repo-id is now automatically set using the GITHUB_REPOSITORY environment variable.
          ./cortexcli \
            --api-base-url "https://api-tac-x5.xdr.sg.paloaltonetworks.com" \
            --api-key "${{ secrets.CORTEX_API_KEY }}" \
            --api-key-id "${{ secrets.CORTEX_API_KEY_ID }}" \
            code scan \
            --directory "$(pwd)" \
            --repo-id "${{ github.repository }}" \
            --branch "${{ github.ref_name }}" \
            --source "GITHUB_ACTIONS" \
            --create-repo-if-missing

terraform-deploy:
  runs-on: ubuntu-latest
  steps:
    - name: Checkout Source Code
      uses: actions/checkout@v4

    - name: Azure Login and Terraform Deploy
      env:
        AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
        ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
        GITHUB_REPOSITORY: ${{ github.repository }}
      run: |
        echo "$AZURE_CREDENTIALS" > ./azurecreds.json

        az login --service-principal -u $(jq -r .clientId azurecreds.json) \
                  -p $(jq -r .clientSecret azurecreds.json) \
                  --tenant $(jq -r .tenantId azurecreds.json)

        az account show  # Optional: verify login

        cd terraform/azure/

        terraform init

        terraform plan -input=false -out=tfplan \
          -var="github_username=${GITHUB_REPOSITORY}" \
          -var="admin_password=${ADMIN_PASSWORD}"

        terraform apply -auto-approve tfplan


        

  # The job below is commented out as you requested.
  # This can be used later to destroy the resources for cleanup.
  # terraform-destroy:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout Source Code
  #       uses: actions/checkout@v4
  # 
  #     - name: Azure Login
  #       uses: azure/login@v1
  #       with:
  #         creds: ${{ secrets.AZURE_CREDENTIALS }}
  # 
  #     - name: Setup Terraform
  #       uses: hashicorp/setup-terraform@v2
  # 
  #     - name: Terraform Init
  #       run: terraform init
  #       working-directory: 'terraform/azure/'
  # 
  #     - name: Terraform Destroy
  #       run: terraform destroy -auto-approve "tfplan"
  #       working-directory: 'terraform/azure/'
