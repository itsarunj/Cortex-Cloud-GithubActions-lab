name: 'Cortex Scan and Terraform Azure Deployment'

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  # Environment variables for Cortex CLI
  CORTEX_API_KEY: ${{ secrets.CORTEX_API_KEY }}
  CORTEX_API_KEY_ID: ${{ secrets.CORTEX_API_KEY_ID }}
  CORTEX_API_URL: https://api-tac-x5.xdr.sg.paloaltonetworks.com
  
  # Environment variable for Terraform
  TF_WORKING_DIR: './terraform/azure'

jobs:
  scan-and-deploy:
    name: 'Cortex Scan and Terraform Deployment'
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      # ------------------------------------
      # Cortex CLI Code Scan Steps
      # ------------------------------------
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Verify Node.js Version
        run: node -v

      - name: Download cortexcli
        run: |
          set -x
          crtx_resp=$(curl "${CORTEX_API_URL}/public_api/v1/unified-cli/releases/download-link?os=linux&architecture=amd64" \
            -H "x-xdr-auth-id: ${CORTEX_API_KEY_ID}" \
            -H "Authorization: ${CORTEX_API_KEY}")
          crtx_url=$(echo "$crtx_resp" | jq -r ".signed_url")
          curl -o cortexcli "$crtx_url"
          chmod +x cortexcli
          ./cortexcli --version

      - name: Run Cortex CLI Code Scan
        run: |
          ./cortexcli \
            --api-base-url "${CORTEX_API_URL}" \
            --api-key "${CORTEX_API_KEY}" \
            --api-key-id "${CORTEX_API_KEY_ID}" \
            code scan \
            --directory "${{ github.workspace }}" \
            --repo-id "${{ github.repository }}" \
            --branch "${{ github.ref_name }}" \
            --source "GITHUB_ACTIONS" \
            --create-repo-if-missing
      
      # ------------------------------------
      # Terraform Azure Deployment Steps
      # ------------------------------------
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}


      - name: Run Terraform Deployment
        run: |
          terraform init
          terraform plan -var "github_username=${{ github.actor }}" -out="tfplan"
          terraform apply "tfplan"
        working-directory: ${{ env.TF_WORKING_DIR }}
